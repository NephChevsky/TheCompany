{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { Filter } from 'src/app/_models/filter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/invoice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../_modules/view-list/view-list.component\";\nimport * as i6 from \"../../_modules/preview/preview.component\";\nimport * as i7 from \"../../_modules/field/field.component\";\n\nfunction ShowInvoiceComponent_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelementStart(4, \"app-field\", 10);\n    i0.ɵɵlistener(\"focusEvent\", function ShowInvoiceComponent_tr_6_Template_app_field_focusEvent_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onFocus($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"type\", field_r4.type);\n    i0.ɵɵpropertyInterpolate(\"key\", field_r4.name);\n    i0.ɵɵproperty(\"form\", ctx_r0.invoiceForm)(\"editMode\", ctx_r0.editMode);\n  }\n}\n\nfunction ShowInvoiceComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ShowInvoiceComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.setEditMode();\n    });\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ShowInvoiceComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ShowInvoiceComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.cancel();\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ShowInvoiceComponent_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ShowInvoiceComponent_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.save();\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"Reference\", \"Description\", \"Quantity\", \"UnitaryPrice\", \"Price\"];\n};\n\nexport let ShowInvoiceComponent = /*#__PURE__*/(() => {\n  class ShowInvoiceComponent {\n    constructor(invoiceService, route, formBuilder) {\n      this.invoiceService = invoiceService;\n      this.route = route;\n      this.formBuilder = formBuilder;\n      this.id = \"\";\n      this.page = 1;\n      this.filters = [];\n      this.editMode = false;\n      this.invoiceForm = new FormGroup({});\n      this.lineItemsForm = new FormGroup({});\n    }\n\n    ngOnInit() {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.filters.push(new Filter(\"InvoiceId\", \"=\", this.id));\n\n      if (this.id) {\n        this.invoiceService.getInvoice(this.id).subscribe(data => {\n          this.invoiceData = data.fields;\n\n          for (var i = 0; i < this.invoiceData.length; i++) {\n            this.invoiceForm.addControl(this.invoiceData[i].name, new FormControl(this.invoiceData[i].value));\n          }\n        }, error => {// TODO: handle errors\n        });\n      }\n    }\n\n    setEditMode() {\n      this.editMode = true;\n    }\n\n    save() {\n      var fields = [];\n\n      for (const [key, value] of Object.entries(this.invoiceForm.value)) {\n        fields.push({\n          name: key,\n          value: value\n        });\n      }\n\n      var lineItems = [];\n      var tmp = this.lineItemsForm.get(\"values\");\n\n      for (var i = 0; i < tmp.value.length; i++) {\n        var lineItemsFields = [];\n        var id;\n\n        for (const [key, value] of Object.entries(tmp.at(i).value)) {\n          if (key == \"Id\") id = value;else lineItemsFields.push({\n            name: key,\n            value: value.toString()\n          });\n        }\n\n        var item = {\n          id: id,\n          fields: lineItemsFields\n        };\n        lineItems.push(item);\n      }\n\n      var obj = {\n        id: this.id,\n        fields: fields,\n        lineItems: lineItems\n      };\n      this.invoiceService.saveInvoice(obj).subscribe(data => {\n        window.location.reload();\n      }, error => {// TODO: handle errors\n      });\n    }\n\n    cancel() {\n      this.editMode = false;\n    }\n\n    onFocus(target = null) {\n      if (this.editMode) {\n        var id = target.id;\n        this.focusedFieldId = id;\n      }\n    }\n\n    fillExtractedText(text) {\n      if (this.editMode) {\n        var input = document.getElementById(this.focusedFieldId);\n        var tmp = this.focusedFieldId.split(\".\");\n        if (tmp.length == 2) this.lineItemsForm.controls[\"values\"].get([tmp[0]]).patchValue({\n          [tmp[1]]: text\n        });else this.invoiceForm.patchValue({\n          [this.focusedFieldId]: text\n        });\n        input.focus();\n      }\n    }\n\n  }\n\n  ShowInvoiceComponent.ɵfac = function ShowInvoiceComponent_Factory(t) {\n    return new (t || ShowInvoiceComponent)(i0.ɵɵdirectiveInject(i1.InvoiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  ShowInvoiceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowInvoiceComponent,\n    selectors: [[\"app-show-invoice\"]],\n    decls: 21,\n    vars: 13,\n    consts: [[1, \"content\"], [1, \"invoiceFields\"], [3, \"formGroup\"], [4, \"ngFor\", \"ngForOf\"], [\"dataSource\", \"InvoiceLineItem\", 3, \"filters\", \"fields\", \"editMode\", \"linesForm\", \"focusEvent\"], [1, \"buttons\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [1, \"invoicePreview\", 3, \"focus\"], [\"dataSource\", \"Invoice\", 3, \"id\", \"page\", \"extractedTextEvent\"], [3, \"type\", \"form\", \"key\", \"editMode\", \"focusEvent\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n    template: function ShowInvoiceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h4\");\n        i0.ɵɵtext(3, \"Invoice details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵelementStart(5, \"table\");\n        i0.ɵɵtemplate(6, ShowInvoiceComponent_tr_6_Template, 5, 5, \"tr\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"h4\");\n        i0.ɵɵtext(10, \"Line items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 2);\n        i0.ɵɵelementStart(12, \"app-view-list\", 4);\n        i0.ɵɵlistener(\"focusEvent\", function ShowInvoiceComponent_Template_app_view_list_focusEvent_12_listener($event) {\n          return ctx.onFocus($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵtemplate(16, ShowInvoiceComponent_button_16_Template, 2, 0, \"button\", 6);\n        i0.ɵɵtemplate(17, ShowInvoiceComponent_button_17_Template, 2, 0, \"button\", 7);\n        i0.ɵɵtemplate(18, ShowInvoiceComponent_button_18_Template, 2, 0, \"button\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8);\n        i0.ɵɵlistener(\"focus\", function ShowInvoiceComponent_Template_div_focus_19_listener($event) {\n          return ctx.onFocus($event.target);\n        });\n        i0.ɵɵelementStart(20, \"app-preview\", 9);\n        i0.ɵɵlistener(\"extractedTextEvent\", function ShowInvoiceComponent_Template_app_preview_extractedTextEvent_20_listener($event) {\n          return ctx.fillExtractedText($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.invoiceForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.invoiceData);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.lineItemsForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"filters\", ctx.filters)(\"fields\", i0.ɵɵpureFunction0(12, _c0))(\"editMode\", ctx.editMode)(\"linesForm\", ctx.lineItemsForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx.id)(\"page\", ctx.page);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.NgForOf, i5.ViewListComponent, i4.NgIf, i6.PreviewComponent, i7.FieldComponent],\n    styles: [\".content[_ngcontent-%COMP%]{padding:10px;width:100%;height:100%;display:flex}.invoiceFields[_ngcontent-%COMP%]{width:50%}.invoicePreview[_ngcontent-%COMP%]{width:50%;height:100%}td[_ngcontent-%COMP%]{border:1px black solid}.buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:10px}\"]\n  });\n  return ShowInvoiceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}