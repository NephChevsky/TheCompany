{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction FieldComponent_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 5);\n    i0.ɵɵlistener(\"focus\", function FieldComponent_input_1_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onFocus($event.target);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", (ctx_r0.index != null ? ctx_r0.index + \".\" : \"\") + ctx_r0.key)(\"formControlName\", ctx_r0.key)(\"size\", ctx_r0.size)(\"readonly\", !ctx_r0.editMode);\n  }\n}\n\nfunction FieldComponent_textarea_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"textarea\", 6);\n    i0.ɵɵlistener(\"focus\", function FieldComponent_textarea_2_Template_textarea_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onFocus($event.target);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", (ctx_r1.index != null ? ctx_r1.index + \".\" : \"\") + ctx_r1.key)(\"formControlName\", ctx_r1.key)(\"rows\", ctx_r1.rows)(\"cols\", ctx_r1.cols)(\"readonly\", !ctx_r1.editMode);\n  }\n}\n\nfunction FieldComponent_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 7);\n    i0.ɵɵlistener(\"focus\", function FieldComponent_input_3_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onFocus($event.target);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", (ctx_r2.index != null ? ctx_r2.index + \".\" : \"\") + ctx_r2.key)(\"formControlName\", ctx_r2.key)(\"readonly\", !ctx_r2.editMode);\n  }\n}\n\nfunction FieldComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.form.get(ctx_r3.key).value);\n  }\n}\n\nexport let FieldComponent = /*#__PURE__*/(() => {\n  class FieldComponent {\n    constructor() {\n      this.index = null;\n      this.key = \"\";\n      this.value = \"\";\n      this.size = \"50\";\n      this.rows = \"3\";\n      this.cols = \"51\";\n      this.focusEvent = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onFocus(target) {\n      this.focusEvent.emit(target);\n    }\n\n  }\n\n  FieldComponent.ɵfac = function FieldComponent_Factory(t) {\n    return new (t || FieldComponent)();\n  };\n\n  FieldComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FieldComponent,\n    selectors: [[\"app-field\"]],\n    inputs: {\n      type: \"type\",\n      form: \"form\",\n      index: \"index\",\n      key: \"key\",\n      value: \"value\",\n      size: \"size\",\n      rows: \"rows\",\n      cols: \"cols\",\n      editMode: \"editMode\"\n    },\n    outputs: {\n      focusEvent: \"focusEvent\"\n    },\n    decls: 5,\n    vars: 5,\n    consts: [[3, \"formGroup\"], [\"type\", \"text\", 3, \"id\", \"formControlName\", \"size\", \"readonly\", \"focus\", 4, \"ngIf\"], [3, \"id\", \"formControlName\", \"rows\", \"cols\", \"readonly\", \"focus\", 4, \"ngIf\"], [\"type\", \"number\", \"style\", \"width: 100px;\", 3, \"id\", \"formControlName\", \"readonly\", \"focus\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"text\", 3, \"id\", \"formControlName\", \"size\", \"readonly\", \"focus\"], [3, \"id\", \"formControlName\", \"rows\", \"cols\", \"readonly\", \"focus\"], [\"type\", \"number\", 2, \"width\", \"100px\", 3, \"id\", \"formControlName\", \"readonly\", \"focus\"]],\n    template: function FieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, FieldComponent_input_1_Template, 1, 4, \"input\", 1);\n        i0.ɵɵtemplate(2, FieldComponent_textarea_2_Template, 1, 5, \"textarea\", 2);\n        i0.ɵɵtemplate(3, FieldComponent_input_3_Template, 1, 3, \"input\", 3);\n        i0.ɵɵtemplate(4, FieldComponent_div_4_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode && ctx.type == \"TextField\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode && ctx.type == \"MultilineTextField\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode && ctx.type == \"NumberField\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editMode);\n      }\n    },\n    directives: [i1.NgControlStatusGroup, i1.FormGroupDirective, i2.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NumberValueAccessor],\n    styles: [\"\"]\n  });\n  return FieldComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}